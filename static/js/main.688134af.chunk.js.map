{"version":3,"sources":["actions/index.js","components/App.js","reducers/joke.js","reducers/index.js","index.js"],"names":["baseUrl","SET_RANDOM_JOKE","SET_JOKE","SET_CATEGORIES","CHANGE_STATUS","CHANGE_LOADING_STATUS","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","search","_this$props","searchRandomJoke","searchCategories","searchJoke","state","searchQuery","alert","setSearchQuery","e","setState","target","value","moveQuery","localStorage","getItem","removeItem","_this$props2","jokeList","categories","dataFromCache","loading","react_default","a","createElement","className","alt","src","srcSet","type","onChange","placeholder","onClick","react_loading_default","color","height","width","map","category","index","key","joke","icon_url","Component","connect","dispatch","axios","get","concat","then","res","data","query","localData","JSON","parse","result","length","setItem","stringify","initialState","arguments","undefined","action","objectSpread","toConsumableArray","combineReducers","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","render","es","src_components_App","document","getElementById"],"mappings":"2PAEMA,EAAU,mCAyDHC,EAAkB,kBAClBC,EAAW,WACXC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAwB,yCCrD/BC,qBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOVQ,OAAS,WAAM,IAAAC,EAC6CR,EAAKD,MAAxDU,EADMD,EACNC,iBAAkBC,EADZF,EACYE,iBAAkBC,EAD9BH,EAC8BG,WACf,IAA1BX,EAAKY,MAAMC,YAIgB,WAA3Bb,EAAKY,MAAMC,YACZJ,IACkC,eAA3BT,EAAKY,MAAMC,YAClBH,IAEAC,EAAWX,EAAKY,MAAMC,aARtBC,MAAM,6BAXSd,EAuBlBe,eAAiB,SAACC,GACjBhB,EAAKiB,SAAS,CACZJ,YAAaG,EAAEE,OAAOC,SAzBPnB,EA6BlBoB,UAAY,WACGC,aAAaC,QAAQtB,EAAKY,MAAMC,cAE5CQ,aAAaE,WAAWvB,EAAKY,MAAMC,aACnCC,MAAM,0BAENA,MAAM,+BAhCLd,EAAKY,MAAQ,CACTC,YAAa,IAJHb,wEAuCT,IAAAwB,EAC6CrB,KAAKJ,MAArD0B,EADGD,EACHC,SAAUC,EADPF,EACOE,WAAYC,EADnBH,EACmBG,cAAeC,EADlCJ,EACkCI,QAC1C,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAI,kEAAkEC,IAAI,0EAA0EC,OAAO,oFACjLN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOJ,UAAU,eAAeK,SAAWlC,KAAKY,eAAiBuB,YAAY,4BACzFT,EAAAC,EAAAC,cAAA,UAAQQ,QAASpC,KAAKI,OAAQyB,UAAU,iBAAxC,UACAH,EAAAC,EAAAC,cAAA,UAAQQ,QAASpC,KAAKiB,UAAWY,UAAU,iBAA3C,sBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXJ,GAAWC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACxBH,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAcM,KAAM,SAAUK,MAAO,UAAWC,OAAQ,GAAIC,MAAO,MAEvEd,EAAAC,EAAAC,cAAA,UACIJ,GAAiBE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,qBACU,eAA3B7B,KAAKS,MAAMC,YACTa,EAAWkB,IAAI,SAACC,EAAUC,GAC1B,OACEjB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,GACPjB,EAAAC,EAAAC,cAAA,SAAIc,MAIRpB,EAASmB,IAAI,SAACI,EAAMF,GACpB,OACEjB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,GACPjB,EAAAC,EAAAC,cAAA,OAAKG,IAAKc,EAAKC,SAAUhB,IAAI,SAC7BJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAChBH,EAAAC,EAAAC,cAAA,SAAIiB,EAAK7B,oBArEX+B,cAqGHC,cAPS,SAACvC,GAAD,MAAY,CAClCa,SAAUb,EAAMoC,KAAKvB,SACrBC,WAAYd,EAAMoC,KAAKtB,WACvBC,cAAef,EAAMoC,KAAKrB,cAC1BC,QAAShB,EAAMoC,KAAKpB,UAlBK,SAACwB,GAC1B,MAAO,CACL3C,iBAAkB,WAChB2C,EDzFgC,SAACA,GACtC,OAAOC,IAAMC,IAAN,GAAAC,OAAa/D,EAAb,YACLgE,KAAK,SAAAC,GACLL,EAAS,CACRhB,KAAM3C,EACNgC,SAAUgC,EAAIC,YCsFdhD,iBAAkB,WAChB0C,EDlFgC,SAACA,GACtC,OAAOC,IAAMC,IAAN,GAAAC,OAAa/D,EAAb,gBACLgE,KAAK,SAAAC,GACLL,EAAS,CACRhB,KAAMzC,EACN+B,WAAY+B,EAAIC,YC+EhB/C,WAAY,SAACgD,GACXP,ED3EoB,SAACO,GAAD,OAAW,SAACP,GACrC,IAAMQ,EAAYC,KAAKC,MAAMzC,aAAaC,QAAQqC,IAClD,OAAGC,GACFR,EAAS,CACRhB,KAAMxC,EACN+B,eAAe,IAETyB,EAAS,CACdhB,KAAM1C,EACN+B,SAAUmC,MAGZR,EAAS,CACRhB,KAAMvC,EACN+B,SAAS,IAEHyB,IAAMC,IAAN,GAAAC,OAAa/D,EAAb,kBAAA+D,OAAqCI,IAC1CH,KAAK,SAAAC,GACyB,IAA3BA,EAAIC,KAAKK,OAAOC,QAClB3C,aAAa4C,QAAQN,EAAOE,KAAKK,UAAUT,EAAIC,KAAKK,SACpDX,EAAS,CACRhB,KAAM1C,EACN+B,SAAUgC,EAAIC,KAAKK,UAGpBjD,MAAM,wBAEPsC,EAAS,CACRhB,KAAMvC,EACN+B,SAAS,QC8CCjB,CAAWgD,OAYXR,CAA6CrD,iBC/GtDqE,EAAe,CACnB1C,SAAU,GACVC,WAAY,GACZC,eAAe,EACfC,SAAS,GAkCIoB,EAhCF,WAAkC,IAAjCpC,EAAiCwD,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,EAAcG,EAAWF,UAAAJ,OAAA,EAAAI,UAAA,QAAAC,EAC7C,OAAQC,EAAOlC,MACb,IAAK,kBACH,OAAOnC,OAAAsE,EAAA,EAAAtE,CAAA,GACFW,EADL,CAEEa,SAASxB,OAAAuE,EAAA,EAAAvE,CAAKW,EAAMa,UAAZ8B,OAAA,CAAsBe,EAAO7C,aAEzC,IAAK,WACH,OAAOxB,OAAAsE,EAAA,EAAAtE,CAAA,GACFW,EADL,CAEEa,SAASxB,OAAAuE,EAAA,EAAAvE,CAAKqE,EAAO7C,YAEzB,IAAK,iBACH,OAAOxB,OAAAsE,EAAA,EAAAtE,CAAA,GACFW,EADL,CAEEc,WAAWzB,OAAAuE,EAAA,EAAAvE,CAAKqE,EAAO5C,cAE3B,IAAK,gBACH,OAAOzB,OAAAsE,EAAA,EAAAtE,CAAA,GACFW,EADL,CAEEe,cAAe2C,EAAO3C,gBAE1B,IAAK,wBACH,OAAO1B,OAAAsE,EAAA,EAAAtE,CAAA,GACFW,EADL,CAEEgB,QAAS0C,EAAO1C,UAEpB,QACE,OAAOhB,IC/BE6D,cAAgB,CAC9BzB,iBCKK0B,EAAQC,YACbC,EACAC,YACIC,MAILC,iBACElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAUN,MAAOA,GACf7C,EAAAC,EAAAC,cAACkD,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.688134af.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'https://api.chucknorris.io/jokes';\n\nexport const searchRandomJoke = () => (dispatch) => {\n\treturn axios.get(`${baseUrl}/random`)\n\t\t.then(res => {\n\t\t\tdispatch({\n\t\t\t\ttype: SET_RANDOM_JOKE,\n\t\t\t\tjokeList: res.data\n\t\t\t})\n\t\t})\n}\n\nexport const searchCategories = () => (dispatch) => {\n\treturn axios.get(`${baseUrl}/categories`)\n\t\t.then(res => {\n\t\t\tdispatch({\n\t\t\t\ttype: SET_CATEGORIES,\n\t\t\t\tcategories: res.data\n\t\t\t})\n\t\t})\n}\n\nexport const searchJoke = (query) => (dispatch) => {\n\tconst localData = JSON.parse(localStorage.getItem(query))\n\tif(localData) {\n\t\tdispatch({\n\t\t\ttype: CHANGE_STATUS,\n\t\t\tdataFromCache: true\n\t\t})\n\t\treturn dispatch({\n\t\t\t\ttype: SET_JOKE,\n\t\t\t\tjokeList: localData\n\t\t\t})\n\t}else{\n\t\tdispatch({\n\t\t\ttype: CHANGE_LOADING_STATUS,\n\t\t\tloading: true\n\t\t})\n\t\treturn axios.get(`${baseUrl}/search?query=${query}`)\n\t\t\t.then(res => {\n\t\t\t\tif(res.data.result.length !== 0) {\n\t\t\t\t\tlocalStorage.setItem(query, JSON.stringify(res.data.result))\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: SET_JOKE,\n\t\t\t\t\t\tjokeList: res.data.result\n\t\t\t\t\t})\n\t\t\t\t}else{\n\t\t\t\t\talert(\"Can't find any joke~\")\n\t\t\t\t}\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: CHANGE_LOADING_STATUS,\n\t\t\t\t\tloading: false\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n\nexport const SET_RANDOM_JOKE = 'SET_RANDOM_JOKE'\nexport const SET_JOKE = 'SET_JOKE'\nexport const SET_CATEGORIES = 'SET_CATEGORIES'\nexport const CHANGE_STATUS = 'CHANGE_STATUS'\nexport const CHANGE_LOADING_STATUS = 'CHANGE_LOADING_STATUS'","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport {\n  searchRandomJoke,\n  searchCategories,\n  searchJoke\n} from '../actions'\nimport ReactLoading from 'react-loading';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n       super(props)\n\n       this.state = {\n           searchQuery: '',\n       }\n\n   }\n   search = () => {\n    const { searchRandomJoke, searchCategories, searchJoke } = this.props;\n    if(this.state.searchQuery == ''){\n      alert('Please type your query!!')\n      return\n    }\n    if(this.state.searchQuery === 'random'){\n      searchRandomJoke();\n    }else if(this.state.searchQuery === 'categories'){\n      searchCategories();\n    }else{\n      searchJoke(this.state.searchQuery);\n    }\n   }\n\n   setSearchQuery = (e) => {\n    this.setState({\n      searchQuery: e.target.value\n    })\n   }\n\n   moveQuery = () => {\n    const query = localStorage.getItem(this.state.searchQuery)\n    if(!!query){\n      localStorage.removeItem(this.state.searchQuery);\n      alert(\"This query is remove~\")\n    }else{\n      alert(\"This query isn't in local!\")\n    }\n   }\n\n  render () {\n    let {jokeList, categories, dataFromCache, loading} = this.props;\n    return (\n      <div className=\"App\">\n        <img className=\"logo\" alt=\"Chuck Norris Jokes Api - JSON API for random Chuck Norris jokes\" src=\"https://assets.chucknorris.host/img/chucknorris_logo_coloured_small.png\" srcSet=\"https://assets.chucknorris.host/img/chucknorris_logo_coloured_small@2x.png 720w\" />\n        <div className=\"search-block\">\n          <input type=\"text\" className=\"search-input\" onChange={ this.setSearchQuery } placeholder=\"Pleace type your query~\"/>\n          <button onClick={this.search} className=\"search-button\">search</button>\n          <button onClick={this.moveQuery} className=\"remove-button\">clean query cache</button>\n        </div>\n        <div className=\"joke-list\">\n          { loading && <div className=\"loading\">\n              <ReactLoading type={'spokes'} color={'#219ea9'} height={70} width={70} />\n            </div>}\n          <ul>\n            { dataFromCache && <p className=\"cache\">Result from cache</p>}\n            { this.state.searchQuery === 'categories' ?\n                categories.map((category, index) => {\n                return (\n                  <li key={index}>\n                    <p>{category}</p>\n                  </li>\n                  )\n              })\n              : jokeList.map((joke, index) => {\n                return (\n                  <li key={index}>\n                    <img src={joke.icon_url} alt=\"icon\"/>\n                    <span className=\"line\"></span>\n                    <p>{joke.value}</p>\n                  </li>\n                  )\n              })}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    searchRandomJoke: () => {\n      dispatch(searchRandomJoke());\n    },\n    searchCategories: () => {\n      dispatch(searchCategories());\n    },\n    searchJoke: (query) => {\n      dispatch(searchJoke(query));\n    },\n  };\n};\n\nconst mapStateToProps = (state) => ({\n  jokeList: state.joke.jokeList,\n  categories: state.joke.categories,\n  dataFromCache: state.joke.dataFromCache,\n  loading: state.joke.loading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initialState = {\n  jokeList: [],\n  categories: [],\n  dataFromCache: false,\n  loading: false\n}\nconst joke = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_RANDOM_JOKE':\n      return {\n        ...state,\n        jokeList: [...state.jokeList, action.jokeList]\n      }\n    case 'SET_JOKE':\n      return {\n        ...state,\n        jokeList: [...action.jokeList]\n      }\n    case 'SET_CATEGORIES':\n      return {\n        ...state,\n        categories: [...action.categories]\n      }\n    case 'CHANGE_STATUS':\n      return {\n        ...state,\n        dataFromCache: action.dataFromCache\n      }\n    case 'CHANGE_LOADING_STATUS':\n      return {\n        ...state,\n        loading: action.loading\n      }\n    default:\n      return state\n  }\n}\n\nexport default joke\n","import { combineReducers } from 'redux'\nimport joke from './joke'\n\nexport default combineReducers({\n\tjoke\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\nimport thunkMiddleware from 'redux-thunk'\n\n\nconst store = createStore(\n\trootReducer,\n\tapplyMiddleware(\n\t    thunkMiddleware\n\t  )\n\t)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}